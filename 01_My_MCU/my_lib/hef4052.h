//--------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------
/*
 * 
 *
 * Created: 
 *  Author: 
 */ 
//--------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------
#ifndef _HEF4052_H        // Блокировка повторного включение модуля.
#define _HEF4052_H
//-----------------------------------------------------------------------------

#include <avr/io.h>

//-----------------------------------------------------------------------------
//Линии управляющие коммутатором мастер-входа и коммутатором уселителя мощности.
#define HEF_PORT	PORTC
#define HEF_DDR		DDRC
#define HEF_PIN		PINC

#define HEF_MASTER_IN_A0	(1<<0)
#define HEF_MASTER_IN_A1	(1<<1)

#define HEF_UM_A0			(1<<2)
#define HEF_UM_A1			(1<<3)

//#define MASTER_IN_K1	(1 << 0)
//#define MASTER_IN_K2	(1 << 1)
////Линии микросхемы DD6, управляющие коммутатором уселителя мощности.
//#define UM_K3			(1 << 2)
//#define UM_K6			(1 << 5)
//-----------------------------------
//Коммутатор мастер-входа.
#define HEF4052_MASTER_IN_LIN_OUT	0	
#define HEF4052_MASTER_IN_MIC_OUT	1	
#define HEF4052_MASTER_IN_CONSOL	2	
#define HEF4052_MASTER_IN_ALL_OFF	3
//-----------------------------------
//Коммутатор уселителя мощности.
#define HEF4052_UM_MASTER_OUT		0
#define HEF4052_UM_EM1				1
#define HEF4052_UM_EM2				2
#define HEF4052_UM_ALL_OFF			3
//-----------------------------------------------------------------------------
//Источники сигнала для усилителя мощности.
#define AUX			5
#define CONSOL		4
#define EM2			3
#define EM1			2
#define MIC			1
#define OFF_SOURCE	6
//-----------------------------------------------------------------------------
//Прототипы функций.
void hef4052_init(void);	
void hef4052_master_in(uint8_t select);
void hef4052_um(uint8_t select);
//-----------------------------------------------------------------------------
#endif // Закрывающий #endif к блокировке повторного включения
//--------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------